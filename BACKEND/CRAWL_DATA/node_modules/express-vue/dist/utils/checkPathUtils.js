'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getCorrectPathForFile = exports.getParamCasePath = undefined;

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _paramCase = require('param-case');

var _paramCase2 = _interopRequireDefault(_paramCase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getParamCasePath(path) {
    // example /Users/foo/code/test/components/componentFile.vue
    var pathArr = path.split('/');

    // gets the last element componentFile.foo
    var fileName = pathArr[pathArr.length - 1];

    // gets the actual file name componentFile
    var newFileName = fileName.split('.vue')[0];

    // paramcases componentFile to component-file and adds. .vue at the end
    var paramCaseFile = (0, _paramCase2.default)(newFileName) + '.vue';

    // replaces last element of the array, with the param'd version of the filename
    pathArr[pathArr.length - 1] = paramCaseFile;

    // returns joined pathname with slashes
    return pathArr.join('/').toString();
}

function getCorrectPathForFile(path, type) {
    return new Promise(function (resolve, reject) {
        _fs2.default.access(path, _fs2.default.constants.F_OK | _fs2.default.constants.R_OK, function (error) {
            if (error) {
                if (error.code === 'ENOENT') {
                    _fs2.default.access(getParamCasePath(path), _fs2.default.constants.F_OK | _fs2.default.constants.R_OK, function (err) {
                        var paramCasePath = '';
                        if (err) {
                            reject(new Error('Could not find ' + type + ' file at ' + (paramCasePath.length > 0 ? paramCasePath : path)));
                        } else {
                            paramCasePath = getParamCasePath(path);
                            resolve({ path: paramCasePath, type: type });
                        }
                    });
                }
            } else {
                resolve({ path: path, type: type });
            }
        });
    });
}

exports.getParamCasePath = getParamCasePath;
exports.getCorrectPathForFile = getCorrectPathForFile;